"use strict";async function getEpisodeLinks({url:url,providerContext:providerContext}){try{const res=await providerContext.axios.get(url),$=providerContext.cheerio.load(res.data||""),episodes=[];return $("a").each((i,el)=>{var _a;const $el=$(el),href=($el.attr("href")||"").trim(),text=$el.text().trim(),isHubcloudLink=href.includes("hubcloud.ink")||href.includes("hubcloud.lol");if(href&&(text.includes("Episode")||/E\d+/i.test(text)||href.includes("vcloud.lol")||isHubcloudLink)){let epNum=(null===(_a=text.match(/E\d+/i))||void 0===_a?void 0:_a[0])||text;/^\d+$/.test(epNum)&&(epNum=`Episode ${epNum}`),isHubcloudLink?episodes.push({title:`${epNum} (HubCloud)`,link:href}):episodes.push({title:epNum,link:href})}}),episodes}catch(err){return[]}}async function getEpisodes({url:url,providerContext:providerContext}){return await getEpisodeLinks({url:url,providerContext:providerContext})}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getEpisodeLinks=getEpisodeLinks,exports.getEpisodes=getEpisodes;