"use strict";function base64Decode(str){const cleanedStr=str.replace(/\s/g,"");try{const binaryStr=atob(cleanedStr);return decodeURIComponent(binaryStr.split("").map(function(c){return"%"+("00"+c.charCodeAt(0).toString(16)).slice(-2)}).join(""))}catch(e){return""}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getEpisodes=void 0;const getEpisodes=function({url:url,providerContext:providerContext}){const{axios:axios,cheerio:cheerio,commonHeaders:headers}=providerContext;return axios.get(url,{headers:headers}).then(res=>{let $=cheerio.load(res.data);const episodes=[],scriptContent=$("script").filter((i,el)=>{var _a,_b;return null!==(_b=null===(_a=$(el).html())||void 0===_a?void 0:_a.includes('const encoded = "'))&&void 0!==_b&&_b}).html();let encodedContent="";if(scriptContent){const match=scriptContent.match(/const encoded = "([^"]+)"/);match&&match[1]&&(encodedContent=match[1])}let decodedContent="";encodedContent&&(decodedContent=base64Decode(encodedContent));const fullHtml=res.data+decodedContent;$=cheerio.load(fullHtml);const container=$(".entry-content, .entry-inner");container.find("h4, h3").each((_,element)=>{const el=$(element);let titleMatch=el.text().match(/-:Episodes?: (\d+):-/i);const episodeNumber=titleMatch?titleMatch[1]:"";if(!episodeNumber)return;const simpleTitle=`Episode ${episodeNumber.padStart(2,"0")}`;el.next("p").find("a").each((_,a)=>{var _a;const anchor=$(a),href=null===(_a=anchor.attr("href"))||void 0===_a?void 0:_a.trim();let providerName="Download";const cleanedLinkText=anchor.text().replace(/[\s\u26a1\ud83d\udd06\u27a1\u2b50\u2b07]/g,"").trim();cleanedLinkText.includes("M-Cloud")?providerName="M-Cloud":cleanedLinkText.includes("V-Cloud")?providerName="V-Cloud":cleanedLinkText.includes("Mega")||(null==href?void 0:href.toLowerCase().includes("mega.nz"))?providerName="Mega":cleanedLinkText.includes("Filepress")?providerName="Filepress":cleanedLinkText.includes("DropGalaxy")&&(providerName="DropGalaxy"),href&&(cleanedLinkText.includes("G-Drive")||"Download"===providerName||episodes.push({title:simpleTitle,link:href}))})}),container.find("h3, h4").each((_,element)=>{const el=$(element),headerText=el.text().trim(),seasonCompleteMatch=headerText.match(/(Season\s*(\d+)\s*Complete|Season\s*(\d+).*?Complete\s*Pack)/i);if(seasonCompleteMatch){let baseTitle=`S${seasonCompleteMatch[2]||seasonCompleteMatch[3]} Complete`;const detailsMatch=headerText.match(/(\d+p WEB-DL.*|Complete Pack.*)/i);detailsMatch?baseTitle+=` [${detailsMatch[1].trim()}]`:headerText.includes("Complete Pack")&&(baseTitle+=" [Complete Pack]"),el.next("p").find("a").each((_,a)=>{var _a;const anchor=$(a),href=null===(_a=anchor.attr("href"))||void 0===_a?void 0:_a.trim();let providerName="Download";const linkText=anchor.text().replace(/[\s\u26a1\ud83d\udd06\u27a1\u2b50\u2b07]/g,"").trim();linkText.includes("V-Cloud")?providerName="V-Cloud":linkText.includes("M-Cloud")?providerName="M-Cloud":linkText.includes("GDToT")?providerName="GDToT":linkText.includes("Filepress")?providerName="Filepress":linkText.includes("DropGalaxy")?providerName="DropGalaxy":linkText.toLowerCase().includes("download")&&(providerName="Download"),href&&"Download"!==providerName&&episodes.push({title:`${baseTitle} (${providerName})`,link:href})})}});const uniqueEpisodes=[];new Set;for(const episode of episodes){const existingEpisodeIndex=uniqueEpisodes.findIndex(e=>e.link===episode.link);-1===existingEpisodeIndex?uniqueEpisodes.push(episode):uniqueEpisodes[existingEpisodeIndex].title.length<episode.title.length&&(uniqueEpisodes[existingEpisodeIndex].title=episode.title)}return uniqueEpisodes}).catch(err=>[])};exports.getEpisodes=getEpisodes;