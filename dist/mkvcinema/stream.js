"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStream=void 0;const getStream=async function({link:link,type:type,providerContext:providerContext}){try{const{axios:axios,cheerio:cheerio}=providerContext,streams=[];function scrapeGDFlix(gdflixLink){return axios.get(gdflixLink,{headers:{Referer:link,"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"}}).then(gdRes=>{const $gd=cheerio.load(gdRes.data),gdStreams=[];return $gd("a[href]").each((_,el)=>{const $el=$gd(el),hrefAttr=$el.attr("href")||"",text=($el.text()||"").trim();if(hrefAttr&&hrefAttr.toLowerCase().includes("pixeldrain")){const sizeMatch=($el.parent().text()||"").match(/\[(.*?)\]/),size=sizeMatch?` [${sizeMatch[1]}]`:"";gdStreams.push({server:(text||"PixelDrain")+size,link:hrefAttr,type:"file"})}}),gdStreams})}if(link.includes("gdflix.dev/file/"))return await scrapeGDFlix(link);const res=await axios.get(link,{headers:{Referer:"https://google.com","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"}}),$=cheerio.load(res.data);let gdflixLink="";if($("a[href]").each((_,el)=>{const href=$(el).attr("href")||"";href.includes("gdflix")&&(gdflixLink=href)}),gdflixLink){const gdStreams=await scrapeGDFlix(gdflixLink);streams.push(...gdStreams)}return streams}catch(err){return[]}};exports.getStream=getStream;