"use strict";async function getEpisodeLinks({url:url,providerContext:providerContext}){try{const res=await providerContext.axios.get(url),$=providerContext.cheerio.load(res.data||""),episodes=[];return $("h4.fittexted_for_content_h4, h4:not([class])").each((_,h4El)=>{const epTitleRaw=$(h4El).text().trim();if(!epTitleRaw)return;const match=epTitleRaw.match(/-:Episode(s)?:\s*(\d+):-/i);if(!match||!match[2])return;const episodeTitle=`Episode ${match[2].padStart(2,"0")}`;$(h4El).nextUntil("h4, hr, h4.fittexted_for_content_h4").find("a[href]").each((_,linkEl)=>{const href=($(linkEl).attr("href")||"").trim(),btnText=$(linkEl).text().trim();if(!href)return;const lowerHref=href.toLowerCase();(lowerHref.includes("vcloud.zip")||lowerHref.includes("vcloud.lol"))&&btnText.includes("V-Cloud")&&episodes.push({title:episodeTitle,link:href})})}),episodes.sort((a,b)=>{var _a,_b;return parseInt((null===(_a=a.title.match(/\d+/))||void 0===_a?void 0:_a[0])||"0")-parseInt((null===(_b=b.title.match(/\d+/))||void 0===_b?void 0:_b[0])||"0")}),episodes}catch(err){return[]}}async function getEpisodes({url:url,providerContext:providerContext}){return await getEpisodeLinks({url:url,providerContext:providerContext})}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getEpisodeLinks=getEpisodeLinks,exports.getEpisodes=getEpisodes;