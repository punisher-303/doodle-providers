"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getEpisodes=void 0;const getEpisodes=async function({url:link,providerContext:providerContext}){var _a;const{getBaseUrl:getBaseUrl,axios:axios}=providerContext;try{const url=`${await getBaseUrl("nfMirror")}/pv/episodes.php?s=`+link+"&t="+Math.round((new Date).getTime()/1e3);let page=1,hasMorePages=!0;const episodeList=[];for(;hasMorePages;){const data=(await axios.get(url+`&page=${page}`,{headers:{"Content-Type":"application/json","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36","Accept-Language":"en-US,en;q=0.9"}})).data;null===(_a=null==data?void 0:data.episodes)||void 0===_a||_a.map(episode=>{episodeList.push({title:"Episode "+(null==episode?void 0:episode.ep.replace("E","")),link:null==episode?void 0:episode.id})}),(null==data?void 0:data.nextPageShow)?page++:hasMorePages=!1}return episodeList.sort((a,b)=>parseInt(a.title.replace("Episode ",""))-parseInt(b.title.replace("Episode ","")))}catch(err){return[]}};exports.getEpisodes=getEpisodes;