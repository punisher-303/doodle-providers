"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStream=getStream;const headers={Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","Accept-Language":"en-US,en;q=0.9","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36 Edg/131.0.0.0"};async function gdflixExtractor(link,axios,cheerio,signal){const streamLinks=[];try{const gdflixRes=await axios.get(link,{headers:headers,signal:signal}),pixelDrainEl=cheerio.load(gdflixRes.data)('a[href*="pixeldrain.dev/api/file/"]'),pixelDrainLink=pixelDrainEl.attr("href");pixelDrainEl.text().trim().replace(/\s*\[.*\]/i,"").replace(/\s*DL/i," Download");pixelDrainLink&&streamLinks.push({server:"PixelDrain",link:pixelDrainLink,type:"mp4"})}catch(error){}return streamLinks}async function getStream({link:link,type:type,signal:signal,providerContext:providerContext}){const{axios:axios,cheerio:cheerio,extractors:extractors}=providerContext,{hubcloudExtracter:hubcloudExtracter}=extractors;try{return link.includes("gdflix.dev")?await gdflixExtractor(link,axios,cheerio,signal):await hubcloudExtracter(link,signal)}catch(error){return error.message.includes("Aborted"),[]}}